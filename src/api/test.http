###
# Threadloaf API Testing
# Use this file with VSCode REST Client extension to test API endpoints
###

### Variables
@baseUrl = http://localhost:3000
@guildId = test-guild-id
@channelId = 1334738913197293621

###
# Health Check Endpoint
# Tests if the API server is running
GET {{baseUrl}}/health

###
# Get Messages for Multiple Channels/Threads
# Replace the guildId and channelIds with actual Discord guild/channel IDs
POST {{baseUrl}}/{{guildId}}/messages
Content-Type: application/json

{
  "channelIds": ["{{channelId}}", "1334738913197293622", "1334738913197293623"],
  "maxMessagesPerChannel": 10
}

###
# Get Messages for Single Channel (using array with one element)
POST {{baseUrl}}/{{guildId}}/messages
Content-Type: application/json

{
  "channelIds": ["{{channelId}}"],
  "maxMessagesPerChannel": 5
}

###
# Get All Forum Threads for a Guild
# Returns all forum threads with their latest replies for the specified guild
GET {{baseUrl}}/{{guildId}}/forum-threads

###
# Test Error Handling - Invalid Guild ID
POST {{baseUrl}}/invalid-guild-id/messages
Content-Type: application/json

{
  "channelIds": ["{{channelId}}"],
  "maxMessagesPerChannel": 10
}

###
# Test Error Handling - Missing channelIds
POST {{baseUrl}}/{{guildId}}/messages
Content-Type: application/json

{
  "maxMessagesPerChannel": 10
}

###
# Test Error Handling - Invalid maxMessagesPerChannel
POST {{baseUrl}}/{{guildId}}/messages
Content-Type: application/json

{
  "channelIds": ["{{channelId}}"],
  "maxMessagesPerChannel": -1
}

###
# Test Non-existent Endpoint
GET {{baseUrl}}/non-existent-endpoint 
